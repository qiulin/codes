!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BTnode	BTnode.h	/^struct BTnode {$/;"	s
BinaryTree	BinaryTree.h	/^class BinaryTree$/;"	c
BinaryTree	BinaryTree.h	/^        BinaryTree() : m_root(NULL) {}$/;"	f	class:BinaryTree
BinaryTree	BinaryTree.h	/^        BinaryTree(const BinaryTree &rhs)$/;"	f	class:BinaryTree
Clear	BinaryTree.h	/^        void Clear()$/;"	f	class:BinaryTree
Depth	BinaryTree.h	/^        int Depth()$/;"	f	class:BinaryTree
IsEmpty	BinaryTree.h	/^        bool IsEmpty() const$/;"	f	class:BinaryTree
LeftChild	BinaryTree.h	/^        BTNode<ElemType>* LeftChild(BTNode<ElemType> *p)$/;"	f	class:BinaryTree
Locate	BinaryTree.h	/^        BTNode<ElemType>* Locate(ElemType &e)$/;"	f	class:BinaryTree
Parent	BinaryTree.h	/^        BTNode<ElemType>* Parent(BTNode<ElemType> *p)$/;"	f	class:BinaryTree
RightChild	BinaryTree.h	/^        BTNode<ElemType>* RightChild(BTNode<ElemType> *p)$/;"	f	class:BinaryTree
Root	BinaryTree.h	/^        BTNode<ElemType>* Root() const$/;"	f	class:BinaryTree
_BINARYTREE_H	BinaryTree.h	2;"	d
data	BTnode.h	/^    ElemType data;$/;"	m	struct:BTnode
lchild	BTnode.h	/^    BTnode<ElemType> *lchild, *rchild;$/;"	m	struct:BTnode
m_root	BinaryTree.h	/^        BTNode<ElemType> *m_root; \/\/二叉树根结点指针$/;"	m	class:BinaryTree
operator =	BinaryTree.h	/^        BinaryTree& operator=(const BinaryTree& rhs)$/;"	f	class:BinaryTree
rchild	BTnode.h	/^    BTnode<ElemType> *lchild, *rchild;$/;"	m	struct:BTnode
~BinaryTree	BinaryTree.h	/^        ~BinaryTree()$/;"	f	class:BinaryTree
